{"version":3,"file":"publisherController.js","sources":["controllers/publisherController.ts"],"sourceRoot":"/","sourcesContent":["import { Request, Response, NextFunction } from \"express\";\nimport * as PublisherService from \"../services/publisherService\";\nimport catchAsync from \"../utils/catchAsync\";\nimport AppError from \"../utils/appError\";\nimport { Types } from \"mongoose\";\n\n/**\n * Convert a string to a MongoDB ObjectId\n * @param {string} id - The ID to convert\n * @returns {Types.ObjectId} - The converted ObjectId\n * @throws {AppError} - Throws an error if the ID format is invalid\n */\nconst convertToObjectId = (id: string) => {\n  try {\n    return new Types.ObjectId(id);\n  } catch (error) {\n    throw new AppError(\"Invalid ID format\", 400);\n  }\n};\n\n/**\n * Controller function to create a publisher\n * @param {Request} req - Express request object with body containing publisher data\n * @param {Response} res - Express response object\n * @param {NextFunction} next - Express next function\n * @returns {Promise<void>} - Returns a JSON object with the publisher data\n */\nexport const createPublisher = catchAsync(\n  async (req: Request, res: Response, next: NextFunction) => {\n    const publisher = await PublisherService.createPublisher(req.body);\n    res.status(201).json({\n      status: \"success\",\n      data: {\n        publisher,\n      },\n    });\n  }\n);\n\n/**\n * Controller function to get a publisher by ID\n * @param {Request} req - Express request object with params containing publisher ID\n * @param {Response} res - Express response object\n * @param {NextFunction} next - Express next function\n * @returns {Promise<void>} - Returns a JSON object with the publisher data\n */\nexport const getPublisherById = catchAsync(\n  async (req: Request, res: Response, next: NextFunction) => {\n    const publisherId = convertToObjectId(req.params.id);\n    const publisher = await PublisherService.getPublisherById(publisherId);\n    if (!publisher) {\n      return next(new AppError(\"No publisher found with that ID\", 404));\n    }\n    res.status(200).json({\n      status: \"success\",\n      data: {\n        publisher,\n      },\n    });\n  }\n);\n\n/**\n * Controller function to get all publishers\n * @param {Request} req - Express request object\n * @param {Response} res - Express response object\n * @param {NextFunction} next - Express next function\n * @returns {Promise<void>} - Returns a JSON object with the publishers data\n */\nexport const getAllPublishers = catchAsync(\n  async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const page = Number(req.query.page) || 1;\n      const limit = Number(req.query.limit) || 10;\n\n      const publishers = await PublisherService.getAllPublishers(\n        {},\n        page,\n        limit,\n        {}\n      );\n\n      res.status(200).json({\n        status: \"success\",\n        data: {\n          publishers,\n        },\n      });\n    } catch (error) {\n      next(new AppError(\"Unable to fetch publishers\", 500));\n    }\n  }\n);\n\n/**\n * Controller function to update a publisher by ID\n * @param {Request} req - Express request object with params containing publisher ID and body containing update data\n * @param {Response} res - Express response object\n * @param {NextFunction} next - Express next function\n * @returns {Promise<void>} - Returns a JSON object with the updated publisher data\n */\nexport const updatePublisherById = catchAsync(\n  async (req: Request, res: Response, next: NextFunction) => {\n    const publisherId = convertToObjectId(req.params.id);\n    const publisher = await PublisherService.updatePublisherById(\n      publisherId,\n      req.body\n    );\n    if (!publisher) {\n      return next(new AppError(\"No publisher found with that ID\", 404));\n    }\n    res.status(200).json({\n      status: \"success\",\n      data: {\n        publisher,\n      },\n    });\n  }\n);\n\n/**\n * Controller function to delete a publisher by ID\n * @param {Request} req - Express request object with params containing publisher ID\n * @param {Response} res - Express response object\n * @param {NextFunction} next - Express next function\n * @returns {Promise<void>} - Returns a JSON object indicating successful deletion\n */\nexport const deletePublisherById = catchAsync(\n  async (req: Request, res: Response, next: NextFunction) => {\n    const publisherId = convertToObjectId(req.params.id);\n    const publisherDeleted = await PublisherService.deletePublisherById(\n      publisherId\n    );\n    if (!publisherDeleted) {\n      return next(new AppError(\"No publisher found with that ID\", 404));\n    }\n    res.status(200).json({\n      status: \"success\",\n      message: \"Publisher successfully deleted\",\n      data: null,\n    });\n  }\n);\n\n/**\n * Controller function to add a book to a publisher\n * @param {Request} req - Express request object with params containing publisher ID and book ID\n * @param {Response} res - Express response object\n * @param {NextFunction} next - Express next function\n * @returns {Promise<void>} - Returns a JSON object with the updated publisher data\n */\nexport const addBookToPublisher = catchAsync(\n  async (req: Request, res: Response, next: NextFunction) => {\n    const publisherId = convertToObjectId(req.params.publisherId);\n    const bookId = convertToObjectId(req.params.bookId);\n\n    const publisher = await PublisherService.addBookToPublisher(\n      publisherId,\n      bookId\n    );\n\n    if (!publisher) {\n      return next(new AppError(\"No publisher found with that ID\", 404));\n    }\n\n    res.status(200).json({\n      status: \"success\",\n      data: {\n        publisher,\n      },\n    });\n  }\n);\n"],"names":[],"mappings":"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","debug_id":"f968fccd-a774-5787-9ed6-9fa585b80a4d"}