{"version":3,"file":"authController.js","sources":["controllers/authController.ts"],"sourceRoot":"/","sourcesContent":["import { Request, Response, NextFunction } from \"express\";\nimport jwt from \"jsonwebtoken\";\nimport bcrypt from \"bcrypt\";\nimport env from \"../config/env\";\nimport userService from \"../services/userService\";\nimport AppError from \"../utils/appError\";\nimport httpStatus from \"http-status\";\n\ninterface AuthenticatedRequest extends Request {\n  user?: string | jwt.JwtPayload;\n}\n\nconst generateAccessToken = (userId: string) => {\n  return jwt.sign({ id: userId }, env.JWT_SECRET, {\n    expiresIn: \"1h\",\n  });\n};\n\nconst generateRefreshToken = (userId: string) => {\n  return jwt.sign({ id: userId }, env.REFRESH_TOKEN_SECRET, {\n    expiresIn: env.REFRESH_TOKEN_EXPIRATION,\n  });\n};\n\nexport const register = async (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  const { username, email, password } = req.body;\n\n  try {\n    const user = await userService.register(username, email, password);\n\n    res.status(201).json({\n      status: \"success\",\n      data: { user },\n    });\n  } catch (error) {\n    next(error);\n  }\n};\n\nexport const login = async (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  const { email, password } = req.body;\n\n  try {\n    const { user, accessToken } = await userService.login(\n      email,\n      password\n    );\n\n    res.status(200).json({\n      status: \"success\",\n      data: { user, accessToken },\n    });\n  } catch (error) {\n    next(error);\n  }\n};\n\nexport const logout = async (\n  req: AuthenticatedRequest,\n  res: Response,\n  next: NextFunction\n) => {\n  const userId = getUserIdFromRequest(req);\n\n  try {\n    if (!userId) {\n      throw new AppError(\"User not authenticated\", 401);\n    }\n\n    await userService.logout(userId);\n\n    res.status(204).json({\n      status: \"success\",\n      data: null,\n    });\n  } catch (error) {\n    next(error);\n  }\n};\n\nexport const refreshTokens = async (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  const refreshToken = req.body.refreshToken;\n\n  if (!refreshToken) {\n    return next(new AppError(\"Refresh token is required\", 400));\n  }\n\n  try {\n    const decoded = jwt.verify(refreshToken, env.REFRESH_TOKEN_SECRET) as {\n      id: string;\n    };\n\n    const accessToken = generateAccessToken(decoded.id);\n    const newRefreshToken = generateRefreshToken(decoded.id);\n\n    res.status(200).json({\n      status: \"success\",\n      data: { accessToken, refreshToken: newRefreshToken },\n    });\n  } catch (error) {\n    next(new AppError(\"Invalid or expired refresh token\", 401));\n  }\n};\n\nexport const requestPasswordReset = async (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  const { email } = req.body;\n\n  try {\n    const token = await userService.requestPasswordReset(email);\n\n    res.status(200).json({\n      status: \"success\",\n      data: { token },\n    });\n  } catch (error) {\n    next(error);\n  }\n};\n\nexport const resetPassword = async (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  const { token } = req.params;\n  const { newPassword } = req.body;\n\n  try {\n    const user = await userService.resetPassword(token, newPassword);\n\n    res.status(200).json({\n      status: \"success\",\n      data: { user },\n    });\n  } catch (error) {\n    next(error);\n  }\n};\n\nexport const changePassword = async (\n  req: AuthenticatedRequest,\n  res: Response,\n  next: NextFunction\n) => {\n  const { currentPassword, newPassword } = req.body;\n  const userId = getUserIdFromRequest(req);\n\n  try {\n    if (!userId) {\n      throw new AppError(\"User not authenticated\", 401);\n    }\n\n    const user = await userService.changePassword(\n      userId,\n      currentPassword,\n      newPassword\n    );\n\n    res.status(200).json({\n      status: \"success\",\n      data: { user },\n    });\n  } catch (error) {\n    next(error);\n  }\n};\n\nexport const verifyEmail = async (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  const { token } = req.params;\n\n  try {\n    const user = await userService.verifyEmail(token);\n\n    res.status(httpStatus.OK).json({\n      status: \"success\",\n      message: \"Email verified successfully.\",\n      data: { user },\n    });\n  } catch (error) {\n    next(error);\n  }\n};\n\nexport const resendVerificationEmail = async (\n  req: AuthenticatedRequest,\n  res: Response,\n  next: NextFunction\n) => {\n  const userId = getUserIdFromRequest(req);\n\n  try {\n    if (!userId) {\n      throw new AppError(\"User not authenticated\", 401);\n    }\n\n    await userService.resendVerificationEmail(userId);\n\n    res.status(200).json({\n      status: \"success\",\n      message: \"Verification email resent successfully\",\n    });\n  } catch (error) {\n    next(error);\n  }\n};\n\n/**\n * Helper function to get userId from request user\n * @param req Express request object\n * @returns User ID as string or undefined\n */\nconst getUserIdFromRequest = (\n  req: AuthenticatedRequest\n): string | undefined => {\n  const user = req.user as jwt.JwtPayload | undefined;\n  return user?.id as string | undefined;\n};\n\nexport { generateAccessToken, generateRefreshToken };\n"],"names":[],"mappings":"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","debug_id":"0d4b19c8-0ce8-5a53-a4a7-833f8d6e90e5"}