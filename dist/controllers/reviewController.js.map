{"version":3,"file":"reviewController.js","sources":["controllers/reviewController.ts"],"sourceRoot":"/","sourcesContent":["import { Request, Response, NextFunction } from \"express\";\nimport * as ReviewService from \"../services/reviewService\";\nimport catchAsync from \"../utils/catchAsync\";\nimport AppError from \"../utils/appError\";\n\n/**\n * Controller function to create a review\n * @param req Express request object with body containing review data\n * @param res Express response object\n * @param next Express next function\n * @returns Returns a JSON object with the review data\n * @returns {status: \"success\", data: {review}}\n */\n\nexport const createReview = catchAsync(\n  async (req: Request, res: Response, next: NextFunction) => {\n    const review = await ReviewService.createReview(req.body);\n    res.status(201).json({\n      status: \"success\",\n      data: {\n        review,\n      },\n    });\n  }\n);\n\n  /**\n   * Controller function by ID to get a review\n   * @param req Express request object\n   * @param res Express response object\n   * @param next Express next function\n   * @returns Returns a JSON object with the review data\n   */\n\nexport const getReviewById = catchAsync(\n  async (req: Request, res: Response, next: NextFunction) => {\n    const review = await ReviewService.getReviewById(req.params.id);\n    if (!review) {\n      return next(new AppError(\"No review found with that ID\", 404));\n    }\n    res.status(200).json({\n      status: \"success\",\n      data: {\n        review,\n      },\n    });\n  }\n);\n\n/**\n * Controller function to get all reviews\n * @param req Express request object\n * @param res Express response object\n * @param next Express next function\n * @returns Returns a JSON object with the review data\n */\n\nexport const getAllReviews = catchAsync(\n  async (req: Request, res: Response, next: NextFunction) => {\n    const sortQuery = (req.query.sort as string)?.split(\",\") || [];\n    const filter = req.query.filter\n      ? JSON.parse(req.query.filter as string)\n      : {};\n    const page = Number(req.query.page) || 1;\n    const limit = Number(req.query.limit) || 10;\n\n    const sortObject: Record<string, \"asc\" | \"desc\"> = {};\n\n    if (sortQuery.length === 2) {\n      const [sortField, sortDirection] = sortQuery;\n      sortObject[sortField] = sortDirection.toLowerCase() as \"asc\" | \"desc\";\n    } else if (sortQuery.length > 0) {\n      return next(new AppError(\"Invalid sort query parameters\", 400));\n    }\n\n    const reviews = await ReviewService.getAllReviews(\n      filter,\n      page,\n      limit,\n      sortObject\n    );\n\n    res.status(200).json({\n      status: \"success\",\n      data: {\n        reviews,\n      },\n    });\n  }\n);\n\n/**\n * Controller function to update a review by ID\n * @param req Express request object with body containing review data\n * @param res Express response object\n * @param next Express next function\n * @returns Returns a JSON object with the review data\n */\n\nexport const updateReviewById = catchAsync(\n  async (req: Request, res: Response, next: NextFunction) => {\n    const review = await ReviewService.updateReviewById(\n      req.params.id,\n      req.body\n    );\n    if (!review) {\n      return next(new AppError(\"No review found with that ID\", 404));\n    }\n    res.status(200).json({\n      status: \"success\",\n      data: {\n        review,\n      },\n    });\n  }\n);\n\n/**\n * Controller function to delete a review by ID\n * @param req Express request object\n * @param res Express response object\n * @param next Express next function\n * @returns Returns a JSON object with the review data\n */\n\nexport const deleteReviewById = catchAsync(\n  async (req: Request, res: Response, next: NextFunction) => {\n    const review = await ReviewService.deleteReviewById(req.params.id);\n    if (!review) {\n      return next(new AppError(\"No review found with that ID\", 404));\n    }\n    res.status(204).json({\n      status: \"success\",\n      data: null,\n    });\n  }\n);\n"],"names":[],"mappings":"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","debug_id":"62764b22-686d-5c40-ae4c-e694ad33452a"}