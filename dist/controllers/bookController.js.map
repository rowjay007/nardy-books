{"version":3,"file":"bookController.js","sources":["controllers/bookController.ts"],"sourceRoot":"/","sourcesContent":["import { Request, Response } from \"express\";\nimport { Types } from \"mongoose\";\nimport * as BookService from \"../services/bookService\";\nimport AppError from \"../utils/appError\";\nimport catchAsync from \"../utils/catchAsync\";\n\n/**\n * Controller function to create a book\n * @param {Request} req - Express request object with body containing book data\n * @param {Response} res - Express response object\n * @returns {Promise<void>} - Returns a JSON object with the created book data\n */\nexport const createBook = catchAsync(async (req: Request, res: Response) => {\n  const book = await BookService.createBook(req.body);\n  res.status(201).json(book);\n});\n\n/**\n * Controller function to get a book by ID\n * @param {Request} req - Express request object with params containing book ID\n * @param {Response} res - Express response object\n * @returns {Promise<void>} - Returns a JSON object with the book data\n */\nexport const getBookById = async (req: Request, res: Response, next: any) => {\n  const bookId = new Types.ObjectId(req.params.id);\n  const book = await BookService.getBookById(bookId);\n\n  if (!book) {\n    return next(new AppError(\"Book not found\", 404));\n  }\n\n  res.status(200).json(book);\n};\n\n/**\n * Controller function to get all books\n * @param {Request} req - Express request object with query parameters for filtering, sorting, and pagination\n * @param {Response} res - Express response object\n * @returns {Promise<void>} - Returns a JSON object with the books data\n */\nexport const getAllBooks = catchAsync(async (req: Request, res: Response) => {\n  const { books, total } = await BookService.getAllBooks(req.query);\n  res.status(200).json({ total, books });\n});\n\n/**\n * Controller function to update a book by ID\n * @param {Request} req - Express request object with params containing book ID and body containing update data\n * @param {Response} res - Express response object\n * @returns {Promise<void>} - Returns a JSON object with the updated book data\n */\nexport const updateBookById = catchAsync(\n  async (req: Request, res: Response) => {\n    const { id } = req.params;\n    const book = await BookService.updateBookById(\n      new Types.ObjectId(id),\n      req.body\n    );\n    if (!book) {\n      throw new AppError(\"Book not found\", 404);\n    }\n    res.status(200).json(book);\n  }\n);\n\n/**\n * Controller function to delete a book by ID\n * @param {Request} req - Express request object with params containing book ID\n * @param {Response} res - Express response object\n * @returns {Promise<void>} - Returns a JSON object indicating successful deletion\n */\nexport const deleteBookById = catchAsync(\n  async (req: Request, res: Response) => {\n    const { id } = req.params;\n    await BookService.deleteBookById(new Types.ObjectId(id));\n    res.status(200).json({ message: \"Book deleted successfully\" });\n  }\n);\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,uCAAiC;AACjC,qEAAuD;AACvD,iEAAyC;AACzC,qEAA6C;AAE7C;;;;;GAKG;AACU,QAAA,UAAU,GAAG,IAAA,oBAAU,EAAC,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IACzE,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACpD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC7B,CAAC,CAAA,CAAC,CAAC;AAEH;;;;;GAKG;AACI,MAAM,WAAW,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,IAAS,EAAE,EAAE;IAC1E,MAAM,MAAM,GAAG,IAAI,gBAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IACjD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAEnD,IAAI,CAAC,IAAI,EAAE,CAAC;QACV,OAAO,IAAI,CAAC,IAAI,kBAAQ,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC,CAAC;IACnD,CAAC;IAED,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC7B,CAAC,CAAA,CAAC;AATW,QAAA,WAAW,eAStB;AAEF;;;;;GAKG;AACU,QAAA,WAAW,GAAG,IAAA,oBAAU,EAAC,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IAC1E,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAClE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;AACzC,CAAC,CAAA,CAAC,CAAC;AAEH;;;;;GAKG;AACU,QAAA,cAAc,GAAG,IAAA,oBAAU,EACtC,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IACpC,MAAM,EAAE,EAAE,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;IAC1B,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC,cAAc,CAC3C,IAAI,gBAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,EACtB,GAAG,CAAC,IAAI,CACT,CAAC;IACF,IAAI,CAAC,IAAI,EAAE,CAAC;QACV,MAAM,IAAI,kBAAQ,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;IAC5C,CAAC;IACD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC7B,CAAC,CAAA,CACF,CAAC;AAEF;;;;;GAKG;AACU,QAAA,cAAc,GAAG,IAAA,oBAAU,EACtC,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IACpC,MAAM,EAAE,EAAE,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;IAC1B,MAAM,WAAW,CAAC,cAAc,CAAC,IAAI,gBAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IACzD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,2BAA2B,EAAE,CAAC,CAAC;AACjE,CAAC,CAAA,CACF,CAAC","debug_id":"f5fbbadf-f6de-5b47-8431-8371f8c1355f"}