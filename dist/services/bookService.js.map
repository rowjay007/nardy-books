{"version":3,"file":"bookService.js","sources":["services/bookService.ts"],"sourceRoot":"/","sourcesContent":["import { Types } from \"mongoose\";\nimport * as BookRepository from \"../repositories/bookRepository\";\nimport { IBook } from \"../models/bookModel\";\nimport cache, { CACHE_TTL_SECONDS } from \"../utils/cache\";\n\nexport const createBook = async (bookData: Partial<IBook>): Promise<IBook> => {\n  const book = await BookRepository.createBook(bookData);\n  cache.flushAll(); \n  return book;\n};\n\nexport const getBookById = async (\n  id: Types.ObjectId\n): Promise<IBook | null> => {\n  const cacheKey = `book_${id.toString()}`;\n  let book: IBook | any = cache.get<IBook>(cacheKey);\n\n  if (book === undefined) {\n    const fetchedBook = await BookRepository.findBookById(id);\n    if (fetchedBook) {\n      book = fetchedBook;\n      cache.set(cacheKey, book, CACHE_TTL_SECONDS);\n    } else {\n      book = null;\n    }\n  }\n\n  return book;\n};\n\nexport const getAllBooks = async (\n  queryParams: any\n): Promise<{ books: IBook[]; total: number }> => {\n  const cacheKey = `allBooks_${JSON.stringify(queryParams)}`;\n  let cachedData = cache.get<{ books: IBook[]; total: number }>(cacheKey);\n\n  if (!cachedData) {\n    cachedData = await BookRepository.findAllBooks(queryParams);\n    cache.set(cacheKey, cachedData, CACHE_TTL_SECONDS);\n  }\n\n  return cachedData;\n};\n\nexport const updateBookById = async (\n  id: Types.ObjectId,\n  bookData: Partial<IBook>\n): Promise<IBook | null> => {\n  const book = await BookRepository.updateBookById(id, bookData);\n  if (book) {\n    cache.flushAll(); \n  }\n  return book;\n};\n\nexport const deleteBookById = async (\n  id: Types.ObjectId\n): Promise<IBook | null> => {\n  const book = await BookRepository.deleteBookById(id);\n  if (book) {\n    cache.flushAll(); \n  }\n  return book;\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,+EAAiE;AAEjE,wDAA0D;AAEnD,MAAM,UAAU,GAAG,CAAO,QAAwB,EAAkB,EAAE;IAC3E,MAAM,IAAI,GAAG,MAAM,cAAc,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;IACvD,eAAK,CAAC,QAAQ,EAAE,CAAC;IACjB,OAAO,IAAI,CAAC;AACd,CAAC,CAAA,CAAC;AAJW,QAAA,UAAU,cAIrB;AAEK,MAAM,WAAW,GAAG,CACzB,EAAkB,EACK,EAAE;IACzB,MAAM,QAAQ,GAAG,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC;IACzC,IAAI,IAAI,GAAgB,eAAK,CAAC,GAAG,CAAQ,QAAQ,CAAC,CAAC;IAEnD,IAAI,IAAI,KAAK,SAAS,EAAE,CAAC;QACvB,MAAM,WAAW,GAAG,MAAM,cAAc,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;QAC1D,IAAI,WAAW,EAAE,CAAC;YAChB,IAAI,GAAG,WAAW,CAAC;YACnB,eAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,EAAE,yBAAiB,CAAC,CAAC;QAC/C,CAAC;aAAM,CAAC;YACN,IAAI,GAAG,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IAED,OAAO,IAAI,CAAC;AACd,CAAC,CAAA,CAAC;AAjBW,QAAA,WAAW,eAiBtB;AAEK,MAAM,WAAW,GAAG,CACzB,WAAgB,EAC4B,EAAE;IAC9C,MAAM,QAAQ,GAAG,YAAY,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC;IAC3D,IAAI,UAAU,GAAG,eAAK,CAAC,GAAG,CAAoC,QAAQ,CAAC,CAAC;IAExE,IAAI,CAAC,UAAU,EAAE,CAAC;QAChB,UAAU,GAAG,MAAM,cAAc,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;QAC5D,eAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAU,EAAE,yBAAiB,CAAC,CAAC;IACrD,CAAC;IAED,OAAO,UAAU,CAAC;AACpB,CAAC,CAAA,CAAC;AAZW,QAAA,WAAW,eAYtB;AAEK,MAAM,cAAc,GAAG,CAC5B,EAAkB,EAClB,QAAwB,EACD,EAAE;IACzB,MAAM,IAAI,GAAG,MAAM,cAAc,CAAC,cAAc,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;IAC/D,IAAI,IAAI,EAAE,CAAC;QACT,eAAK,CAAC,QAAQ,EAAE,CAAC;IACnB,CAAC;IACD,OAAO,IAAI,CAAC;AACd,CAAC,CAAA,CAAC;AATW,QAAA,cAAc,kBASzB;AAEK,MAAM,cAAc,GAAG,CAC5B,EAAkB,EACK,EAAE;IACzB,MAAM,IAAI,GAAG,MAAM,cAAc,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;IACrD,IAAI,IAAI,EAAE,CAAC;QACT,eAAK,CAAC,QAAQ,EAAE,CAAC;IACnB,CAAC;IACD,OAAO,IAAI,CAAC;AACd,CAAC,CAAA,CAAC;AARW,QAAA,cAAc,kBAQzB","debug_id":"ae44a5a3-f7bf-5820-9755-a4eb35167e59"}