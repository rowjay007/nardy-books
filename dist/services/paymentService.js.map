{"version":3,"file":"paymentService.js","sources":["services/paymentService.ts"],"sourceRoot":"/","sourcesContent":["import * as PaymentRepository from \"../repositories/paymentRepository\";\nimport { IPayment } from \"../models/paymentModel\";\nimport { initializePayment, verifyPayment } from \"../utils/paystack\";\nimport {\n  initializeFlutterwavePayment as initFlutterwavePayment,\n  verifyFlutterwavePayment as verifyFlutterwavePaymentUtil,\n} from \"../utils/flutterwave\";\nimport { generateUniqueReference } from \"../utils/referenceTag\";\nimport cache, { CACHE_TTL_SECONDS } from \"../utils/cache\";\n\nexport const createPayment = async (\n  paymentData: Partial<IPayment>\n): Promise<IPayment> => {\n  const reference = generateUniqueReference(\"ADM_\");\n  paymentData.reference = reference;\n\n  const payment = await PaymentRepository.create(paymentData);\n  cache.flushAll();\n  return payment;\n};\n\nexport const getPaymentById = async (id: string): Promise<IPayment | null> => {\n  const cacheKey = `payment_${id}`;\n  let payment = cache.get<IPayment | null>(cacheKey);\n\n  if (payment === undefined) {\n    payment = await PaymentRepository.findById(id);\n    if (payment) {\n      cache.set(cacheKey, payment, CACHE_TTL_SECONDS);\n    }\n  }\n\n  return payment;\n};\n\n\nexport const getAllPayments = async (\n  filter: any,\n  sort: any,\n  page: number,\n  limit: number\n): Promise<IPayment[]> => {\n  const cacheKey = `allPayments_${JSON.stringify({\n    filter,\n    sort,\n    page,\n    limit,\n  })}`;\n  let payments = cache.get<IPayment[]>(cacheKey);\n\n  if (!payments) {\n    payments = await PaymentRepository.findAll(filter, sort, page, limit);\n    cache.set(cacheKey, payments, CACHE_TTL_SECONDS);\n  }\n\n  return payments;\n};\n\nexport const updatePayment = async (\n  id: string,\n  updateData: Partial<IPayment>\n): Promise<IPayment | null> => {\n  const payment = await PaymentRepository.update(id, updateData);\n  if (payment) {\n    cache.flushAll();\n  }\n  return payment;\n};\n\nexport const deletePayment = async (id: string): Promise<void> => {\n  await PaymentRepository.remove(id);\n  cache.flushAll();\n};\n\nexport const processPaystackPayment = async (\n  amount: number,\n  email: string\n): Promise<any> => {\n  const reference = generateUniqueReference(\"PSK_\");\n  const response = await initializePayment(amount, email, reference);\n  return { response, reference };\n};\n\nexport const verifyPaystackPayment = async (\n  reference: string\n): Promise<any> => {\n  return verifyPayment(reference);\n};\n\nexport const processFlutterwavePayment = async (\n  amount: number,\n  email: string\n): Promise<any> => {\n  const reference = generateUniqueReference(\"FLW_\");\n  const response = await initFlutterwavePayment(amount, email, reference);\n  return { response, reference };\n};\n\nexport const verifyFlutterwavePayment = async (\n  reference: string\n): Promise<any> => {\n  return verifyFlutterwavePaymentUtil(reference);\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qFAAuE;AAEvE,gDAAqE;AACrE,sDAG8B;AAC9B,wDAAgE;AAChE,wDAA0D;AAEnD,MAAM,aAAa,GAAG,CAC3B,WAA8B,EACX,EAAE;IACrB,MAAM,SAAS,GAAG,IAAA,sCAAuB,EAAC,MAAM,CAAC,CAAC;IAClD,WAAW,CAAC,SAAS,GAAG,SAAS,CAAC;IAElC,MAAM,OAAO,GAAG,MAAM,iBAAiB,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IAC5D,eAAK,CAAC,QAAQ,EAAE,CAAC;IACjB,OAAO,OAAO,CAAC;AACjB,CAAC,CAAA,CAAC;AATW,QAAA,aAAa,iBASxB;AAEK,MAAM,cAAc,GAAG,CAAO,EAAU,EAA4B,EAAE;IAC3E,MAAM,QAAQ,GAAG,WAAW,EAAE,EAAE,CAAC;IACjC,IAAI,OAAO,GAAG,eAAK,CAAC,GAAG,CAAkB,QAAQ,CAAC,CAAC;IAEnD,IAAI,OAAO,KAAK,SAAS,EAAE,CAAC;QAC1B,OAAO,GAAG,MAAM,iBAAiB,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC/C,IAAI,OAAO,EAAE,CAAC;YACZ,eAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAO,EAAE,yBAAiB,CAAC,CAAC;QAClD,CAAC;IACH,CAAC;IAED,OAAO,OAAO,CAAC;AACjB,CAAC,CAAA,CAAC;AAZW,QAAA,cAAc,kBAYzB;AAGK,MAAM,cAAc,GAAG,CAC5B,MAAW,EACX,IAAS,EACT,IAAY,EACZ,KAAa,EACQ,EAAE;IACvB,MAAM,QAAQ,GAAG,eAAe,IAAI,CAAC,SAAS,CAAC;QAC7C,MAAM;QACN,IAAI;QACJ,IAAI;QACJ,KAAK;KACN,CAAC,EAAE,CAAC;IACL,IAAI,QAAQ,GAAG,eAAK,CAAC,GAAG,CAAa,QAAQ,CAAC,CAAC;IAE/C,IAAI,CAAC,QAAQ,EAAE,CAAC;QACd,QAAQ,GAAG,MAAM,iBAAiB,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QACtE,eAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,yBAAiB,CAAC,CAAC;IACnD,CAAC;IAED,OAAO,QAAQ,CAAC;AAClB,CAAC,CAAA,CAAC;AApBW,QAAA,cAAc,kBAoBzB;AAEK,MAAM,aAAa,GAAG,CAC3B,EAAU,EACV,UAA6B,EACH,EAAE;IAC5B,MAAM,OAAO,GAAG,MAAM,iBAAiB,CAAC,MAAM,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC;IAC/D,IAAI,OAAO,EAAE,CAAC;QACZ,eAAK,CAAC,QAAQ,EAAE,CAAC;IACnB,CAAC;IACD,OAAO,OAAO,CAAC;AACjB,CAAC,CAAA,CAAC;AATW,QAAA,aAAa,iBASxB;AAEK,MAAM,aAAa,GAAG,CAAO,EAAU,EAAiB,EAAE;IAC/D,MAAM,iBAAiB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IACnC,eAAK,CAAC,QAAQ,EAAE,CAAC;AACnB,CAAC,CAAA,CAAC;AAHW,QAAA,aAAa,iBAGxB;AAEK,MAAM,sBAAsB,GAAG,CACpC,MAAc,EACd,KAAa,EACC,EAAE;IAChB,MAAM,SAAS,GAAG,IAAA,sCAAuB,EAAC,MAAM,CAAC,CAAC;IAClD,MAAM,QAAQ,GAAG,MAAM,IAAA,4BAAiB,EAAC,MAAM,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;IACnE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC;AACjC,CAAC,CAAA,CAAC;AAPW,QAAA,sBAAsB,0BAOjC;AAEK,MAAM,qBAAqB,GAAG,CACnC,SAAiB,EACH,EAAE;IAChB,OAAO,IAAA,wBAAa,EAAC,SAAS,CAAC,CAAC;AAClC,CAAC,CAAA,CAAC;AAJW,QAAA,qBAAqB,yBAIhC;AAEK,MAAM,yBAAyB,GAAG,CACvC,MAAc,EACd,KAAa,EACC,EAAE;IAChB,MAAM,SAAS,GAAG,IAAA,sCAAuB,EAAC,MAAM,CAAC,CAAC;IAClD,MAAM,QAAQ,GAAG,MAAM,IAAA,0CAAsB,EAAC,MAAM,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;IACxE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC;AACjC,CAAC,CAAA,CAAC;AAPW,QAAA,yBAAyB,6BAOpC;AAEK,MAAM,wBAAwB,GAAG,CACtC,SAAiB,EACH,EAAE;IAChB,OAAO,IAAA,sCAA4B,EAAC,SAAS,CAAC,CAAC;AACjD,CAAC,CAAA,CAAC;AAJW,QAAA,wBAAwB,4BAInC","debug_id":"ce076dd2-818f-54d8-9684-316f59602bc3"}