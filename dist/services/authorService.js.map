{"version":3,"file":"authorService.js","sources":["services/authorService.ts"],"sourceRoot":"/","sourcesContent":["import * as AuthorRepository from \"../repositories/authorRepository\";\nimport { IAuthor } from \"../models/authorModel\";\nimport { Types } from \"mongoose\";\nimport cache, { CACHE_TTL_SECONDS } from \"../utils/cache\";\n\nexport const createAuthor = async (\n  authorData: Partial<IAuthor>\n): Promise<IAuthor> => {\n  const author = await AuthorRepository.createAuthor(authorData);\n  cache.flushAll(); \n  \n  return author;\n};\n\nexport const getAuthorById = async (\n  id: Types.ObjectId\n): Promise<IAuthor | null> => {\n  const cacheKey = `author_${id.toString()}`;\n  let author: IAuthor | any = cache.get<IAuthor>(cacheKey);\n\n  if (author === undefined) {\n    const fetchedAuthor = await AuthorRepository.getAuthorById(id);\n    if (fetchedAuthor) {\n      author = fetchedAuthor;\n      cache.set(cacheKey, author, CACHE_TTL_SECONDS);\n    } else {\n      author = null;\n    }\n  }\n\n  return author;\n};\n\nexport const getAllAuthors = async (\n  name?: string,\n  page = 1,\n  limit = 10,\n  sortBy = \"name\",\n  sortOrder = \"asc\"\n): Promise<{\n  authors: IAuthor[];\n  total: number;\n  page: number;\n  limit: number;\n}> => {\n  const filter: any = {};\n  if (name) {\n    filter.name = { $regex: name, $options: \"i\" };\n  }\n\n  const sort: any = {};\n  sort[sortBy] = sortOrder === \"desc\" ? -1 : 1;\n\n  const cacheKey = `allAuthors_${JSON.stringify({\n    filter,\n    page,\n    limit,\n    sort,\n  })}`;\n  let cachedData = cache.get<{ authors: IAuthor[]; total: number }>(cacheKey);\n\n  if (!cachedData) {\n    const authors = await AuthorRepository.getAllAuthors(\n      filter,\n      page,\n      limit,\n      sort\n    );\n    const total = await AuthorRepository.getTotalCount(filter);\n    cachedData = { authors, total };\n    cache.set(cacheKey, cachedData, CACHE_TTL_SECONDS);\n  }\n\n  return { ...cachedData, page, limit };\n};\n\nexport const updateAuthorById = async (\n  id: Types.ObjectId,\n  updateData: Partial<IAuthor>\n): Promise<IAuthor | null> => {\n  const author = await AuthorRepository.updateAuthorById(id, updateData);\n  if (author) {\n    cache.flushAll(); \n    \n  }\n  return author;\n};\n\nexport const deleteAuthorById = async (\n  id: Types.ObjectId\n): Promise<IAuthor | null> => {\n  const author = await AuthorRepository.deleteAuthorById(id);\n  if (author) {\n    cache.flushAll(); \n    \n  }\n  return author;\n};\n\nexport const addBookToAuthor = async (\n  authorId: Types.ObjectId,\n  bookId: Types.ObjectId\n): Promise<IAuthor | null> => {\n  const author = await AuthorRepository.addBookToAuthor(authorId, bookId);\n  if (author) {\n    cache.flushAll(); \n    \n  }\n  return author;\n};\n"],"names":[],"mappings":"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","debug_id":"2e757131-e075-5641-b266-81f7048bbaff"}