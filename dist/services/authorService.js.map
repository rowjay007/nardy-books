{"version":3,"file":"authorService.js","sources":["services/authorService.ts"],"sourceRoot":"/","sourcesContent":["import * as AuthorRepository from \"../repositories/authorRepository\";\nimport { IAuthor } from \"../models/authorModel\";\nimport { Types } from \"mongoose\";\n\nexport const createAuthor = async (\n  authorData: Partial<IAuthor>\n): Promise<IAuthor> => {\n  return AuthorRepository.createAuthor(authorData);\n};\n\nexport const getAuthorById = async (\n  id: Types.ObjectId\n): Promise<IAuthor | null> => {\n  return AuthorRepository.getAuthorById(id);\n};\n\nexport const getAllAuthors = async (\n  name?: string,\n  page = 1,\n  limit = 10,\n  sortBy = \"name\",\n  sortOrder = \"asc\"\n): Promise<{\n  authors: IAuthor[];\n  total: number;\n  page: number;\n  limit: number;\n}> => {\n  const filter: any = {};\n  if (name) {\n    filter.name = { $regex: name, $options: \"i\" };\n  }\n\n  const sort: any = {};\n  sort[sortBy] = sortOrder === \"desc\" ? -1 : 1;\n\n  const authors = await AuthorRepository.getAllAuthors(\n    filter,\n    page,\n    limit,\n    sort\n  );\n  const total = await AuthorRepository.getTotalCount(filter);\n\n  return {\n    authors,\n    total,\n    page,\n    limit,\n  };\n};\n\nexport const updateAuthorById = async (\n  id: Types.ObjectId,\n  updateData: Partial<IAuthor>\n): Promise<IAuthor | null> => {\n  return AuthorRepository.updateAuthorById(id, updateData);\n};\n\nexport const deleteAuthorById = async (\n  id: Types.ObjectId\n): Promise<IAuthor | null> => {\n  return AuthorRepository.deleteAuthorById(id);\n};\n\nexport const addBookToAuthor = async (\n  authorId: Types.ObjectId,\n  bookId: Types.ObjectId\n): Promise<IAuthor | null> => {\n  return AuthorRepository.addBookToAuthor(authorId, bookId);\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mFAAqE;AAI9D,MAAM,YAAY,GAAG,CAC1B,UAA4B,EACV,EAAE;IACpB,OAAO,gBAAgB,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;AACnD,CAAC,CAAA,CAAC;AAJW,QAAA,YAAY,gBAIvB;AAEK,MAAM,aAAa,GAAG,CAC3B,EAAkB,EACO,EAAE;IAC3B,OAAO,gBAAgB,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;AAC5C,CAAC,CAAA,CAAC;AAJW,QAAA,aAAa,iBAIxB;AAEK,MAAM,aAAa,GAAG,oBAW1B,EAAE,2DAVH,IAAa,EACb,IAAI,GAAG,CAAC,EACR,KAAK,GAAG,EAAE,EACV,MAAM,GAAG,MAAM,EACf,SAAS,GAAG,KAAK;IAOjB,MAAM,MAAM,GAAQ,EAAE,CAAC;IACvB,IAAI,IAAI,EAAE,CAAC;QACT,MAAM,CAAC,IAAI,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC;IAChD,CAAC;IAED,MAAM,IAAI,GAAQ,EAAE,CAAC;IACrB,IAAI,CAAC,MAAM,CAAC,GAAG,SAAS,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAE7C,MAAM,OAAO,GAAG,MAAM,gBAAgB,CAAC,aAAa,CAClD,MAAM,EACN,IAAI,EACJ,KAAK,EACL,IAAI,CACL,CAAC;IACF,MAAM,KAAK,GAAG,MAAM,gBAAgB,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IAE3D,OAAO;QACL,OAAO;QACP,KAAK;QACL,IAAI;QACJ,KAAK;KACN,CAAC;AACJ,CAAC,CAAA,CAAC;AAlCW,QAAA,aAAa,iBAkCxB;AAEK,MAAM,gBAAgB,GAAG,CAC9B,EAAkB,EAClB,UAA4B,EACH,EAAE;IAC3B,OAAO,gBAAgB,CAAC,gBAAgB,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC;AAC3D,CAAC,CAAA,CAAC;AALW,QAAA,gBAAgB,oBAK3B;AAEK,MAAM,gBAAgB,GAAG,CAC9B,EAAkB,EACO,EAAE;IAC3B,OAAO,gBAAgB,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC;AAC/C,CAAC,CAAA,CAAC;AAJW,QAAA,gBAAgB,oBAI3B;AAEK,MAAM,eAAe,GAAG,CAC7B,QAAwB,EACxB,MAAsB,EACG,EAAE;IAC3B,OAAO,gBAAgB,CAAC,eAAe,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;AAC5D,CAAC,CAAA,CAAC;AALW,QAAA,eAAe,mBAK1B","debug_id":"6e87c422-bdd5-5d3b-a7c7-0efdf46b95b8"}