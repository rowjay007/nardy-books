{"version":3,"file":"subscriptionService.js","sources":["services/subscriptionService.ts"],"sourceRoot":"/","sourcesContent":["import * as subscriptionRepository from \"../repositories/subscriptionRepository\";\nimport { ISubscription } from \"../models/subscriptionModel\";\nimport cache, { CACHE_TTL_SECONDS } from \"../utils/cache\";\n\nexport const createSubscription = async (subscriptionData: ISubscription) => {\n  return await subscriptionRepository.createSubscription(subscriptionData);\n};\n\nexport const getSubscriptions = async (\n  filter: Record<string, any>,\n  sort: Record<string, any>,\n  page: number,\n  limit: number\n) => {\n  return await subscriptionRepository.getSubscriptions(\n    filter,\n    sort,\n    page,\n    limit\n  );\n};\n\nexport const getSubscriptionById = async (id: string): Promise<ISubscription | null> => {\n  const cacheKey = `subscription_${id}`;\n  let subscription: ISubscription | null = cache.get<ISubscription | null>(cacheKey) ?? null;\n\n  if (subscription === null) {\n    subscription = await subscriptionRepository.getSubscriptionById(id);\n    if (subscription) {\n      cache.set(cacheKey, subscription, CACHE_TTL_SECONDS);\n    }\n  }\n\n  return subscription;\n};\n\nexport const updateSubscription = async (\n  id: string,\n  subscriptionData: ISubscription\n) => {\n  const updatedSubscription = await subscriptionRepository.updateSubscription(\n    id,\n    subscriptionData\n  );\n\n  if (updatedSubscription) {\n    const cacheKey = `subscription_${id}`;\n    cache.set(cacheKey, updatedSubscription, CACHE_TTL_SECONDS);\n  }\n\n  return updatedSubscription;\n};\n\nexport const deleteSubscription = async (id: string) => {\n  const deletedSubscription = await subscriptionRepository.deleteSubscription(\n    id\n  );\n\n  if (deletedSubscription) {\n    const cacheKey = `subscription_${id}`;\n    cache.del(cacheKey);\n  }\n\n  return deletedSubscription;\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+FAAiF;AAEjF,wDAA0D;AAEnD,MAAM,kBAAkB,GAAG,CAAO,gBAA+B,EAAE,EAAE;IAC1E,OAAO,MAAM,sBAAsB,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,CAAC;AAC3E,CAAC,CAAA,CAAC;AAFW,QAAA,kBAAkB,sBAE7B;AAEK,MAAM,gBAAgB,GAAG,CAC9B,MAA2B,EAC3B,IAAyB,EACzB,IAAY,EACZ,KAAa,EACb,EAAE;IACF,OAAO,MAAM,sBAAsB,CAAC,gBAAgB,CAClD,MAAM,EACN,IAAI,EACJ,IAAI,EACJ,KAAK,CACN,CAAC;AACJ,CAAC,CAAA,CAAC;AAZW,QAAA,gBAAgB,oBAY3B;AAEK,MAAM,mBAAmB,GAAG,CAAO,EAAU,EAAiC,EAAE;;IACrF,MAAM,QAAQ,GAAG,gBAAgB,EAAE,EAAE,CAAC;IACtC,IAAI,YAAY,GAAyB,MAAA,eAAK,CAAC,GAAG,CAAuB,QAAQ,CAAC,mCAAI,IAAI,CAAC;IAE3F,IAAI,YAAY,KAAK,IAAI,EAAE,CAAC;QAC1B,YAAY,GAAG,MAAM,sBAAsB,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;QACpE,IAAI,YAAY,EAAE,CAAC;YACjB,eAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,YAAY,EAAE,yBAAiB,CAAC,CAAC;QACvD,CAAC;IACH,CAAC;IAED,OAAO,YAAY,CAAC;AACtB,CAAC,CAAA,CAAC;AAZW,QAAA,mBAAmB,uBAY9B;AAEK,MAAM,kBAAkB,GAAG,CAChC,EAAU,EACV,gBAA+B,EAC/B,EAAE;IACF,MAAM,mBAAmB,GAAG,MAAM,sBAAsB,CAAC,kBAAkB,CACzE,EAAE,EACF,gBAAgB,CACjB,CAAC;IAEF,IAAI,mBAAmB,EAAE,CAAC;QACxB,MAAM,QAAQ,GAAG,gBAAgB,EAAE,EAAE,CAAC;QACtC,eAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,mBAAmB,EAAE,yBAAiB,CAAC,CAAC;IAC9D,CAAC;IAED,OAAO,mBAAmB,CAAC;AAC7B,CAAC,CAAA,CAAC;AAfW,QAAA,kBAAkB,sBAe7B;AAEK,MAAM,kBAAkB,GAAG,CAAO,EAAU,EAAE,EAAE;IACrD,MAAM,mBAAmB,GAAG,MAAM,sBAAsB,CAAC,kBAAkB,CACzE,EAAE,CACH,CAAC;IAEF,IAAI,mBAAmB,EAAE,CAAC;QACxB,MAAM,QAAQ,GAAG,gBAAgB,EAAE,EAAE,CAAC;QACtC,eAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACtB,CAAC;IAED,OAAO,mBAAmB,CAAC;AAC7B,CAAC,CAAA,CAAC;AAXW,QAAA,kBAAkB,sBAW7B","debug_id":"040a1a47-b60e-5fd9-8dfd-fe37d80d0e61"}