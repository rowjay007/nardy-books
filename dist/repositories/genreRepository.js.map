{"version":3,"file":"genreRepository.js","sources":["repositories/genreRepository.ts"],"sourceRoot":"/","sourcesContent":["import { Types } from \"mongoose\";\nimport Genre, { IGenre } from \"../models/genreModel\";\n\nexport const createGenre = async (genreData: Partial<IGenre>) => {\n  return await Genre.create(genreData);\n};\n\nexport const getGenreById = async (id: Types.ObjectId) => {\n  return await Genre.findById(id).populate(\"books\");\n};\n\nexport const getAllGenres = async (\n  filter: Record<string, any>,\n  page: number,\n  limit: number,\n  sort: string | Record<string, number> | null | undefined\n) => {\n  let sortOption = {};\n\n  if (typeof sort === \"string\") {\n    sortOption = { [sort]: 1 }; \n  } else if (Array.isArray(sort)) {\n    sortOption = Object.fromEntries(sort.map((s) => [s, 1]));\n  } else if (typeof sort === \"object\" && sort !== null) {\n    sortOption = sort;\n  }\n\n  return await Genre.find(filter)\n    .sort(sortOption)\n    .skip((page - 1) * limit)\n    .limit(limit)\n    .populate(\"books\");\n};\n\nexport const updateGenreById = async (\n  id: Types.ObjectId,\n  updateData: Partial<IGenre>\n) => {\n  return await Genre.findByIdAndUpdate(id, updateData, { new: true }).populate(\n    \"books\"\n  );\n};\n\nexport const deleteGenreById = async (id: Types.ObjectId) => {\n  return await Genre.findByIdAndDelete(id);\n};\n\nexport const addBookToGenre = async (\n  genreId: Types.ObjectId,\n  bookId: Types.ObjectId\n) => {\n  const genre = await Genre.findByIdAndUpdate(\n    genreId,\n    {\n      $push: { books: bookId },\n    },\n    { new: true, useFindAndModify: false }\n  ).populate(\"books\");\n\n  return genre;\n};"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AACA,sEAAqD;AAE9C,MAAM,WAAW,GAAG,CAAO,SAA0B,EAAE,EAAE;IAC9D,OAAO,MAAM,oBAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AACvC,CAAC,CAAA,CAAC;AAFW,QAAA,WAAW,eAEtB;AAEK,MAAM,YAAY,GAAG,CAAO,EAAkB,EAAE,EAAE;IACvD,OAAO,MAAM,oBAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AACpD,CAAC,CAAA,CAAC;AAFW,QAAA,YAAY,gBAEvB;AAEK,MAAM,YAAY,GAAG,CAC1B,MAA2B,EAC3B,IAAY,EACZ,KAAa,EACb,IAAwD,EACxD,EAAE;IACF,IAAI,UAAU,GAAG,EAAE,CAAC;IAEpB,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE,CAAC;QAC7B,UAAU,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;IAC7B,CAAC;SAAM,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC;QAC/B,UAAU,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC;SAAM,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,IAAI,EAAE,CAAC;QACrD,UAAU,GAAG,IAAI,CAAC;IACpB,CAAC;IAED,OAAO,MAAM,oBAAK,CAAC,IAAI,CAAC,MAAM,CAAC;SAC5B,IAAI,CAAC,UAAU,CAAC;SAChB,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;SACxB,KAAK,CAAC,KAAK,CAAC;SACZ,QAAQ,CAAC,OAAO,CAAC,CAAC;AACvB,CAAC,CAAA,CAAC;AArBW,QAAA,YAAY,gBAqBvB;AAEK,MAAM,eAAe,GAAG,CAC7B,EAAkB,EAClB,UAA2B,EAC3B,EAAE;IACF,OAAO,MAAM,oBAAK,CAAC,iBAAiB,CAAC,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,QAAQ,CAC1E,OAAO,CACR,CAAC;AACJ,CAAC,CAAA,CAAC;AAPW,QAAA,eAAe,mBAO1B;AAEK,MAAM,eAAe,GAAG,CAAO,EAAkB,EAAE,EAAE;IAC1D,OAAO,MAAM,oBAAK,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;AAC3C,CAAC,CAAA,CAAC;AAFW,QAAA,eAAe,mBAE1B;AAEK,MAAM,cAAc,GAAG,CAC5B,OAAuB,EACvB,MAAsB,EACtB,EAAE;IACF,MAAM,KAAK,GAAG,MAAM,oBAAK,CAAC,iBAAiB,CACzC,OAAO,EACP;QACE,KAAK,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE;KACzB,EACD,EAAE,GAAG,EAAE,IAAI,EAAE,gBAAgB,EAAE,KAAK,EAAE,CACvC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAEpB,OAAO,KAAK,CAAC;AACf,CAAC,CAAA,CAAC;AAbW,QAAA,cAAc,kBAazB","debug_id":"568d9f95-6d97-5313-8991-a8189f353a67"}