{"version":3,"file":"userRepository.js","sources":["repositories/userRepository.ts"],"sourceRoot":"/","sourcesContent":["import User, { IUser } from \"../models/userModel\";\nimport AppError from \"../utils/appError\";\n\nexport const createUser = async (userData: Partial<IUser>): Promise<IUser> => {\n  const user = new User(userData);\n  await user.save();\n  return user;\n};\n\nexport const findUserByEmail = async (email: string): Promise<IUser | null> => {\n  return User.findOne({ email });\n};\n\nexport const findUserById = async (id: string): Promise<IUser | null> => {\n  return User.findById(id);\n};\n\nexport const findUsers = async (\n  filter: any,\n  sort: any,\n  limit: number,\n  skip: number\n): Promise<IUser[]> => {\n  return User.find(filter).sort(sort).limit(limit).skip(skip);\n};\n\nexport const updateUser = async (id: string, updateData: Partial<IUser>): Promise<IUser | null> => {\n  return User.findByIdAndUpdate(id, updateData, { new: true });\n};\n\nexport const deleteUser = async (id: string): Promise<boolean> => {\n  const result = await User.findByIdAndDelete(id);\n  return result !== null;\n};\n\nexport const setResetPasswordToken = async (\n  id: string,\n  token: string,\n  expires: Date\n): Promise<IUser> => {\n  const user = await User.findById(id);\n  if (!user) throw new AppError(\"User not found\", 404);\n  user.resetPasswordToken = token;\n  user.resetPasswordExpires = expires;\n  await user.save();\n  return user;\n};\n\nexport const findByResetPasswordToken = async (token: string): Promise<IUser | null> => {\n  return User.findOne({\n    resetPasswordToken: token,\n    resetPasswordExpires: { $gt: new Date() },\n  });\n};\n\nexport const setRefreshToken = async (id: string, refreshToken: string): Promise<IUser> => {\n  const user = await User.findById(id);\n  if (!user) throw new AppError(\"User not found\", 404);\n  user.refreshToken = refreshToken;\n  await user.save();\n  return user;\n};\n\nexport const removeRefreshToken = async (id: string): Promise<IUser> => {\n  const user = await User.findById(id);\n  if (!user) throw new AppError(\"User not found\", 404);\n  user.refreshToken = undefined;\n  await user.save();\n  return user;\n};\n"],"names":[],"mappings":"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","debug_id":"3a99771c-43c0-5564-ad21-30efbd669a6c"}