{"version":3,"file":"metricsRoutes.js","sources":["routes/metricsRoutes.ts"],"sourceRoot":"/","sourcesContent":["import express from \"express\";\nimport {\n  collectDefaultMetrics,\n  register,\n  Histogram,\n  Summary,\n  Gauge,\n  Counter,\n} from \"prom-client\";\n\nconst router = express.Router();\n\ncollectDefaultMetrics();\n\nconst httpRequestDurationHistogram = new Histogram({\n  name: \"http_request_duration_seconds\",\n  help: \"Duration of HTTP requests in seconds\",\n  labelNames: [\"method\", \"route\", \"status_code\"],\n  buckets: [0.1, 0.5, 1, 1.5, 2, 5],\n});\n\nconst httpRequestDurationSummary = new Summary({\n  name: \"http_request_duration_summary_seconds\",\n  help: \"Summary of HTTP request durations in seconds\",\n  labelNames: [\"method\", \"route\", \"status_code\"],\n});\n\nconst activeRequestsGauge = new Gauge({\n  name: \"active_requests\",\n  help: \"Number of active requests\",\n});\n\nconst requestCounter = new Counter({\n  name: \"http_requests_total\",\n  help: \"Total number of HTTP requests\",\n  labelNames: [\"method\", \"route\", \"status_code\"],\n});\n\n/**\n * @swagger\n * tags:\n *   name: Metrics\n *   description: Metrics collection and reporting\n */\n\n/**\n * @swagger\n * /metrics:\n *   get:\n *     summary: Get application metrics\n *     tags: [Metrics]\n *     responses:\n *       200:\n *         description: Metrics collected by Prometheus\n *         content:\n *           text/plain:\n *             schema:\n *               type: string\n *       500:\n *         description: Some server error\n */\nrouter.use((req, res, next) => {\n  const endHistogram = httpRequestDurationHistogram.startTimer();\n  const endSummary = httpRequestDurationSummary.startTimer();\n\n  activeRequestsGauge.inc();\n  requestCounter.inc({\n    method: req.method,\n    route: req.path,\n    status_code: res.statusCode,\n  });\n\n  res.on(\"finish\", () => {\n    endHistogram({\n      method: req.method,\n      route: req.path,\n      status_code: res.statusCode,\n    });\n    endSummary({\n      method: req.method,\n      route: req.path,\n      status_code: res.statusCode,\n    });\n    activeRequestsGauge.dec();\n  });\n\n  next();\n});\n\nrouter.get(\"/\", async (req, res) => {\n  res.set(\"Content-Type\", register.contentType);\n  res.end(await register.metrics());\n});\n\nexport default router;\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,sDAA8B;AAC9B,6CAOqB;AAErB,MAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAEhC,IAAA,mCAAqB,GAAE,CAAC;AAExB,MAAM,4BAA4B,GAAG,IAAI,uBAAS,CAAC;IACjD,IAAI,EAAE,+BAA+B;IACrC,IAAI,EAAE,sCAAsC;IAC5C,UAAU,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,aAAa,CAAC;IAC9C,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;CAClC,CAAC,CAAC;AAEH,MAAM,0BAA0B,GAAG,IAAI,qBAAO,CAAC;IAC7C,IAAI,EAAE,uCAAuC;IAC7C,IAAI,EAAE,8CAA8C;IACpD,UAAU,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,aAAa,CAAC;CAC/C,CAAC,CAAC;AAEH,MAAM,mBAAmB,GAAG,IAAI,mBAAK,CAAC;IACpC,IAAI,EAAE,iBAAiB;IACvB,IAAI,EAAE,2BAA2B;CAClC,CAAC,CAAC;AAEH,MAAM,cAAc,GAAG,IAAI,qBAAO,CAAC;IACjC,IAAI,EAAE,qBAAqB;IAC3B,IAAI,EAAE,+BAA+B;IACrC,UAAU,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,aAAa,CAAC;CAC/C,CAAC,CAAC;AAEH;;;;;GAKG;AAEH;;;;;;;;;;;;;;;GAeG;AACH,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE;IAC5B,MAAM,YAAY,GAAG,4BAA4B,CAAC,UAAU,EAAE,CAAC;IAC/D,MAAM,UAAU,GAAG,0BAA0B,CAAC,UAAU,EAAE,CAAC;IAE3D,mBAAmB,CAAC,GAAG,EAAE,CAAC;IAC1B,cAAc,CAAC,GAAG,CAAC;QACjB,MAAM,EAAE,GAAG,CAAC,MAAM;QAClB,KAAK,EAAE,GAAG,CAAC,IAAI;QACf,WAAW,EAAE,GAAG,CAAC,UAAU;KAC5B,CAAC,CAAC;IAEH,GAAG,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE;QACpB,YAAY,CAAC;YACX,MAAM,EAAE,GAAG,CAAC,MAAM;YAClB,KAAK,EAAE,GAAG,CAAC,IAAI;YACf,WAAW,EAAE,GAAG,CAAC,UAAU;SAC5B,CAAC,CAAC;QACH,UAAU,CAAC;YACT,MAAM,EAAE,GAAG,CAAC,MAAM;YAClB,KAAK,EAAE,GAAG,CAAC,IAAI;YACf,WAAW,EAAE,GAAG,CAAC,UAAU;SAC5B,CAAC,CAAC;QACH,mBAAmB,CAAC,GAAG,EAAE,CAAC;IAC5B,CAAC,CAAC,CAAC;IAEH,IAAI,EAAE,CAAC;AACT,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;IACjC,GAAG,CAAC,GAAG,CAAC,cAAc,EAAE,sBAAQ,CAAC,WAAW,CAAC,CAAC;IAC9C,GAAG,CAAC,GAAG,CAAC,MAAM,sBAAQ,CAAC,OAAO,EAAE,CAAC,CAAC;AACpC,CAAC,CAAA,CAAC,CAAC;AAEH,kBAAe,MAAM,CAAC","debug_id":"522035a3-6d0f-55ed-998e-e1629c79afae"}