{"version":3,"file":"paymentRoutes.js","sources":["routes/paymentRoutes.ts"],"sourceRoot":"/","sourcesContent":["import { Router } from \"express\";\nimport * as PaymentController from \"../controllers/paymentController\";\nimport { protect } from \"../middlewares/authMiddleware\";\n\nconst router = Router();\nrouter.use(protect);\n\n/**\n * @swagger\n * tags:\n *   name: Payments\n *   description: API endpoints for managing payments\n */\n\n/**\n * @swagger\n * components:\n *   schemas:\n *     Payment:\n *       type: object\n *       required:\n *         - amount\n *         - method\n *         - status\n *         - user\n *         - date\n *       properties:\n *         amount:\n *           type: number\n *         method:\n *           type: string\n *         status:\n *           type: string\n *         user:\n *           type: string\n *         date:\n *           type: string\n *           format: date\n *       example:\n *         amount: 100\n *         method: \"Card\"\n *         status: \"Paid\"\n *         user: \"60c72b2f9b1d4c3f7e1e4567\"\n *         date: \"2024-06-25\"\n *   securitySchemes:\n *     bearerAuth:\n *       type: http\n *       scheme: bearer\n *       bearerFormat: JWT\n */\n\n/**\n * @swagger\n * /api/v1/payments:\n *   get:\n *     summary: Get all payments with filters, sorting, and pagination options\n *     tags: [Payments]\n *     parameters:\n *       - in: query\n *         name: filter\n *         schema:\n *           type: string\n *         description: JSON filter object for payments\n *       - in: query\n *         name: sort\n *         schema:\n *           type: string\n *         description: JSON sort object for payments\n *       - in: query\n *         name: page\n *         schema:\n *           type: integer\n *         description: Page number for pagination\n *       - in: query\n *         name: limit\n *         schema:\n *           type: integer\n *         description: Limit per page for pagination\n *     responses:\n *       200:\n *         description: List of payments retrieved successfully\n *       400:\n *         description: Invalid query parameters\n */\nrouter.get(\"/\", PaymentController.getAllPayments);\n\n/**\n * @swagger\n * /payments/{id}:\n *   get:\n *     summary: Retrieve a payment by ID\n *     tags: [Payments]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         schema:\n *           type: string\n *         description: Payment ID\n *     responses:\n *       200:\n *         description: Successfully retrieved the payment\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 status:\n *                   type: string\n *                   example: success\n *                 data:\n *                   $ref: '#/components/schemas/Payment'\n *       404:\n *         description: Payment not found\n *       500:\n *         description: Internal server error\n */\nrouter.get(\"/:id\", PaymentController.getPaymentById);\n\n/**\n * @swagger\n * /payments:\n *   post:\n *     summary: Create a new payment\n *     tags: [Payments]\n *     security:\n *       - bearerAuth: []\n *     requestBody:\n *       description: Payment details\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             $ref: '#/components/schemas/Payment'\n *     responses:\n *       201:\n *         description: Payment created successfully\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 status:\n *                   type: string\n *                   example: success\n *                 data:\n *                   $ref: '#/components/schemas/Payment'\n *       400:\n *         description: Invalid request body\n *       500:\n *         description: Internal server error\n */\nrouter.post(\"/\", PaymentController.createPayment);\n\n/**\n * @swagger\n * /payments/{id}:\n *   put:\n *     summary: Update a payment by ID\n *     tags: [Payments]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         schema:\n *           type: string\n *         description: Payment ID\n *     requestBody:\n *       description: Updated payment details\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             $ref: '#/components/schemas/Payment'\n *     responses:\n *       200:\n *         description: Payment updated successfully\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 status:\n *                   type: string\n *                   example: success\n *                 data:\n *                   $ref: '#/components/schemas/Payment'\n *       400:\n *         description: Invalid request body or ID\n *       404:\n *         description: Payment not found\n *       500:\n *         description: Internal server error\n */\nrouter.put(\"/:id\", PaymentController.updatePayment);\n\n/**\n * @swagger\n * /payments/{id}:\n *   delete:\n *     summary: Delete a payment by ID\n *     tags: [Payments]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         schema:\n *           type: string\n *         description: Payment ID\n *     responses:\n *       204:\n *         description: Payment deleted successfully\n *       404:\n *         description: Payment not found\n *       500:\n *         description: Internal server error\n */\nrouter.delete(\"/:id\", PaymentController.deletePayment);\n\n/**\n * @swagger\n * /payments/paystack:\n *   post:\n *     summary: Initialize Paystack payment\n *     tags: [Payments]\n *     security:\n *       - bearerAuth: []\n *     requestBody:\n *       description: Payment initialization details\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             properties:\n *               amount:\n *                 type: number\n *                 example: 1000\n *               email:\n *                 type: string\n *                 format: email\n *                 example: user@example.com\n *     responses:\n *       200:\n *         description: Payment initialized successfully\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 status:\n *                   type: string\n *                   example: success\n *                 data:\n *                   type: object\n *                   properties:\n *                     authorization_url:\n *                       type: string\n *                       example: https://paystack.com/authorize\n *                     access_code:\n *                       type: string\n *                       example: xyz123\n *       400:\n *         description: Invalid request body\n *       500:\n *         description: Internal server error\n */\nrouter.post(\"/paystack\", PaymentController.processPaystackPayment);\n\n/**\n * @swagger\n * /payments/paystack/verify/{reference}:\n *   post:\n *     summary: Verify Paystack payment\n *     tags: [Payments]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: path\n *         name: reference\n *         required: true\n *         schema:\n *           type: string\n *         description: Payment reference\n *     responses:\n *       200:\n *         description: Payment verified successfully\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 status:\n *                   type: string\n *                   example: success\n *                 data:\n *                   type: object\n *                   properties:\n *                     message:\n *                       type: string\n *                       example: Payment verified\n *       400:\n *         description: Invalid request body\n *       404:\n *         description: Payment not found\n *       500:\n *         description: Internal server error\n */\nrouter.post(\n  \"/paystack/verify/:reference\",\n  PaymentController.verifyPaystackPayment\n);\n\n/**\n * @swagger\n * /payments/flutterwave:\n *   post:\n *     summary: Initialize Flutterwave payment\n *     tags: [Payments]\n *     security:\n *       - bearerAuth: []\n *     requestBody:\n *       description: Payment initialization details\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             properties:\n *               amount:\n *                 type: number\n *                 example: 1000\n *               email:\n *                 type: string\n *                 format: email\n *                 example: user@example.com\n *     responses:\n *       200:\n *         description: Payment initialized successfully\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 status:\n *                   type: string\n *                   example: success\n *                 data:\n *                   type: object\n *                   properties:\n *                     authorization_url:\n *                       type: string\n *                       example: https://flutterwave.com/authorize\n *                     access_code:\n *                       type: string\n *                       example: xyz123\n *       400:\n *         description: Invalid request body\n *       500:\n *         description: Internal server error\n */\nrouter.post(\"/flutterwave\", PaymentController.processFlutterwavePayment);\n\n/**\n * @swagger\n * /payments/flutterwave/verify/{reference}:\n *   post:\n *     summary: Verify Flutterwave payment\n *     tags: [Payments]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: path\n *         name: reference\n *         required: true\n *         schema:\n *           type: string\n *         description: Payment reference\n *     responses:\n *       200:\n *         description: Payment verified successfully\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 status:\n *                   type: string\n *                   example: success\n *                 data:\n *                   type: object\n *                   properties:\n *                     message:\n *                       type: string\n *                       example: Payment verified\n *       400:\n *         description: Invalid request body\n *       404:\n *         description: Payment not found\n *       500:\n *         description: Internal server error\n */\nrouter.post(\n  \"/flutterwave/verify/:reference\",\n  PaymentController.verifyFlutterwavePayment\n);\n\nexport default router;\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qCAAiC;AACjC,oFAAsE;AACtE,kEAAwD;AAExD,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AACxB,MAAM,CAAC,GAAG,CAAC,wBAAO,CAAC,CAAC;AAEpB;;;;;GAKG;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAmCG;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAgCG;AACH,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,iBAAiB,CAAC,cAAc,CAAC,CAAC;AAElD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAgCG;AACH,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,iBAAiB,CAAC,cAAc,CAAC,CAAC;AAErD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAgCG;AACH,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,iBAAiB,CAAC,aAAa,CAAC,CAAC;AAElD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAyCG;AACH,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,iBAAiB,CAAC,aAAa,CAAC,CAAC;AAEpD;;;;;;;;;;;;;;;;;;;;;;GAsBG;AACH,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,iBAAiB,CAAC,aAAa,CAAC,CAAC;AAEvD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+CG;AACH,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,iBAAiB,CAAC,sBAAsB,CAAC,CAAC;AAEnE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAsCG;AACH,MAAM,CAAC,IAAI,CACT,6BAA6B,EAC7B,iBAAiB,CAAC,qBAAqB,CACxC,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+CG;AACH,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,iBAAiB,CAAC,yBAAyB,CAAC,CAAC;AAEzE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAsCG;AACH,MAAM,CAAC,IAAI,CACT,gCAAgC,EAChC,iBAAiB,CAAC,wBAAwB,CAC3C,CAAC;AAEF,kBAAe,MAAM,CAAC","debug_id":"342fb4dc-44f0-57eb-ab08-61ee6d1f4ecd"}