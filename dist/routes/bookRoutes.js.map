{"version":3,"file":"bookRoutes.js","sources":["routes/bookRoutes.ts"],"sourceRoot":"/","sourcesContent":["import { Router } from \"express\";\nimport * as BookController from \"../controllers/bookController\";\nimport { protect } from \"../middlewares/authMiddleware\";\n\nconst router = Router();\nrouter.use(protect);\n\n/**\n * @swagger\n * components:\n *   securitySchemes:\n *     bearerAuth:\n *       type: http\n *       scheme: bearer\n *       bearerFormat: JWT\n *   schemas:\n *     Book:\n *       type: object\n *       required:\n *         - title\n *         - author\n *         - publisher\n *         - genre\n *         - price\n *       properties:\n *         title:\n *           type: string\n *           description: The book title\n *         author:\n *           type: string\n *           description: The author ID\n *         publisher:\n *           type: string\n *           description: The publisher ID\n *         genre:\n *           type: string\n *           description: The genre ID\n *         reviews:\n *           type: array\n *           items:\n *             type: string\n *           description: Array of review IDs\n *         price:\n *           type: number\n *           description: The price of the book\n *       example:\n *         title: The Great Gatsby\n *         author: 60d0fe4f5311236168a109ca\n *         publisher: 60d0fe4f5311236168a109cb\n *         genre: 60d0fe4f5311236168a109cc\n *         reviews: []\n *         price: 10.99\n */\n\n/**\n * @swagger\n * tags:\n *   name: Books\n *   description: The books managing API\n */\n\n/**\n * @swagger\n * /books:\n *   post:\n *     summary: Create a new book\n *     tags: [Books]\n *     security:\n *       - bearerAuth: []\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             $ref: '#/components/schemas/Book'\n *     responses:\n *       200:\n *         description: The book was successfully created\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/Book'\n *       500:\n *         description: Some server error\n */\nrouter.post(\"/\", BookController.createBook);\n\n/**\n * @swagger\n * /books/{id}:\n *   get:\n *     summary: Get the book by id\n *     tags: [Books]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: path\n *         name: id\n *         schema:\n *           type: string\n *         required: true\n *         description: The book id\n *     responses:\n *       200:\n *         description: The book description by id\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/Book'\n *       404:\n *         description: The book was not found\n */\nrouter.get(\"/:id\", BookController.getBookById);\n\n/**\n * @swagger\n * /books:\n *   get:\n *     summary: Returns the list of all the books\n *     tags: [Books]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: query\n *         name: sort\n *         schema:\n *           type: string\n *         required: false\n *         description: Sort order (e.g. price,-title)\n *       - in: query\n *         name: limit\n *         schema:\n *           type: integer\n *         required: false\n *         description: Maximum number of results per page\n *       - in: query\n *         name: page\n *         schema:\n *           type: integer\n *         required: false\n *         description: Page number\n *     responses:\n *       200:\n *         description: The list of the books\n *         content:\n *           application/json:\n *             schema:\n *               type: array\n *               items:\n *                 $ref: '#/components/schemas/Book'\n */\nrouter.get(\"/\", BookController.getAllBooks);\n\n/**\n * @swagger\n * /books/{id}:\n *   put:\n *     summary: Update the book by the id\n *     tags: [Books]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: path\n *         name: id\n *         schema:\n *           type: string\n *         required: true\n *         description: The book id\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             $ref: '#/components/schemas/Book'\n *     responses:\n *       200:\n *         description: The book was updated\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/Book'\n *       404:\n *         description: The book was not found\n *       500:\n *         description: Some error happened\n */\nrouter.put(\"/:id\", BookController.updateBookById);\n\n/**\n * @swagger\n * /books/{id}:\n *   delete:\n *     summary: Remove the book by id\n *     tags: [Books]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: path\n *         name: id\n *         schema:\n *           type: string\n *         required: true\n *         description: The book id\n *     responses:\n *       200:\n *         description: The book was deleted\n *       404:\n *         description: The book was not found\n */\nrouter.delete(\"/:id\", BookController.deleteBookById);\n\nexport default router;\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qCAAiC;AACjC,8EAAgE;AAChE,kEAAwD;AAExD,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AACxB,MAAM,CAAC,GAAG,CAAC,wBAAO,CAAC,CAAC;AAEpB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6CG;AAEH;;;;;GAKG;AAEH;;;;;;;;;;;;;;;;;;;;;;;GAuBG;AACH,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,cAAc,CAAC,UAAU,CAAC,CAAC;AAE5C;;;;;;;;;;;;;;;;;;;;;;;;GAwBG;AACH,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,cAAc,CAAC,WAAW,CAAC,CAAC;AAE/C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAoCG;AACH,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,cAAc,CAAC,WAAW,CAAC,CAAC;AAE5C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAgCG;AACH,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,cAAc,CAAC,cAAc,CAAC,CAAC;AAElD;;;;;;;;;;;;;;;;;;;;GAoBG;AACH,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,cAAc,CAAC,cAAc,CAAC,CAAC;AAErD,kBAAe,MAAM,CAAC","debug_id":"7f133d9e-767a-555a-85fe-3c134d4b8fba"}